#include <iostream>
#include <fstream>
#include <stdio.h>
#include <stdlib.h>


const char *COLORS[] = {
	"\033[32;01m", /* GREEN */
	"\033[33;01m", /* YELLOW */
	"\033[1;31m",  /* RED */
};

const char *NORMAL = "\033[0m";

class Writer {
private:
	std::ofstream _out;
	int _color;
public:
	Writer(const char *file, int color) : _out(file), _color(color) {}
	virtual void write(char *msg) {
		_out << COLORS[_color] << msg << NORMAL << std::endl;
	}
};

class DebugWriter : public Writer {
public:
	DebugWriter(const char *file, int color) : Writer(file, color) {}
	virtual void write(char *msg) {
		char cmd[256];
		sprintf(cmd, "echo '%s' 1>&2", msg);
		system(cmd);
	}
} DBG("/dev/stderr", 2);

void print_green(Writer *green_writer, char *msg) {
	green_writer->write(msg);
}

int main(int argc, char *argv[]) {
	Writer dev_out("/dev/stdout", 0);
	char msg[32];
	std::cin.getline(msg, sizeof(char *) * 32);
	print_green(&dev_out, msg);
	return 0;
}
